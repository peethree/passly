package main

import (
	"bytes"
	"testing"
)

func TestPadWithZeros(t *testing.T) {
	type testCase struct {
		input       []byte
		desiredSize int
		expected    []byte
	}

	tests := []testCase{
		{[]byte{0xFF}, 4, []byte{0xFF, 0x00, 0x00, 0x00}},
		{[]byte{0xFA, 0xBC}, 8, []byte{0xFA, 0xBC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
		{[]byte{0x12, 0x34, 0x56}, 12, []byte{0x12, 0x34, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
	}

	if withSubmit {
		tests = append(tests, []testCase{
			{[]byte{0xFA}, 16, []byte{0xFA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
			{[]byte{}, 10, []byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
		}...)
	}

	for _, test := range tests {
		result := padWithZeros(test.input, test.desiredSize)
		if !bytes.Equal(result, test.expected) {
			t.Errorf("Padding failed. Got: %v, Expected: %v", result, test.expected)
		}
	}
}

// var withSubmit = true
